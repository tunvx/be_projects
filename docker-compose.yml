networks:
  n8n-network:
    external: true  # If the network does not exist, it must be created manually first

volumes:
  n8n_data:
    external: true  
  postgres_volume:
    external: true  

services:
  postgres:
      image: postgres:17.2
      container_name: n8n_database
      restart: always
      environment:
        - POSTGRES_USER=${PG_USER:-postgres}
        - POSTGRES_PASSWORD=${PG_PASSWORD:-secret}
        - POSTGRES_DB=${PG_DATABASE:-core_db}
      # ports:
      #   - "${PG_PORT}:5432"
      expose:
        - 5432
      networks:
        - n8n-network
      volumes:
        - postgres_volume:/var/lib/postgresql/data
      command: >
        postgres 
        -c max_connections=200
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -p 5432 -U ${PG_USER:-postgres} -d ${PG_DATABASE_CORE_DB:-core_db} || exit 1"]
        interval: 60s
        timeout: 5s
        retries: 3
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n_service
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=n8n_database        
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${PG_DATABASE:-core_db}
      - DB_POSTGRESDB_USER=${PG_USER:-postgres}
      - DB_POSTGRESDB_PASSWORD=${PG_PASSWORD:-secret}
      - N8N_BASIC_AUTH_ACTIVE=true             # optional, auth basic
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASS:-adminpass}
      - GENERIC_TIMEZONE=Asia/Ho_Chi_Minh
    ports:
      - "${N8N_PORT}:5678"
    networks:
      - n8n-network
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
